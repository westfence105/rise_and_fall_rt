class SDL_GL_Window {
  +main()
  +width : int
  +height : int
  +resize() : ( int w, int h )
  +setBackground() : (Color)
  +setFrameRate() : (int)
  +quit()
  ~onResize() : ( int w, int h )
  ~handleEvent() <virtual> : bool(SDL_Event)
  ~setProjection() <virtual>
  ~prepare() <virtual>
  ~draw() <virtual>
  ~update() <virtual> : ( uint32_t delta )
}

SDL_GL_Window -down-|> MainWindow

class MainWindow {
  ~draw() <override virtual>
  ~update() <override virtual> : ( uint32_t delta )
  ~handleEvent() <override virtual> : bool(SDL_Event)
  -scene : Scene*
}

abstract Scene {
  +prepare() <virtual>
  ~genBuffers() <virtual>
  +draw() const <virtual>
  +update() <virtual> : ( uint32_t delta )
  +handleEvent <virtual> : bool(SDL_Event)
  next_scene : Scene*
  ~loadNext<T>() : (args...)
  +getNext() : Scene* (NULL if next is not loaded)
}

MainWindow <..> Scene

class SDL_GL_Window::Config {
  +width  : int
  +height : int
  +x : int
  +y : int
  +window_mode : enum
  +frame_rate  : int
  +background  : Color
}

SDL_GL_Window <.right.> "SDL_GL_Window::Config"

class RF_Config <<Singleton>> {
  +path : boost::filesystem::path
  +debug : string <scene name:only in debug build>
  +font : string
  +init() : (argc,argv)
}

"SDL_GL_Window::Config" -down-|> RF_Config
RF_Config .left.> MainWindow
